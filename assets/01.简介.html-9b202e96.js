const e=JSON.parse('{"key":"v-846a561e","path":"/Spring/01.Spring%E5%85%A5%E9%97%A8/01.%E7%AE%80%E4%BB%8B.html","title":"简介","lang":"zh-CN","frontmatter":{"title":"简介","date":"2022-03-29T20:28:33.000Z","category":["Spring全家桶","Spring入门"],"description":"狂神说Java： 历史 2002年，首次推出Spring框架的雏形：interface21框架。; 2004年3月24日，Spring框架以interface21框架为基础，经过重新设计，发布了1.0正式版本。; Rod Johnson; Spring Framework创始人，著名作者。 很难想象Rod Johnson的学历，真的让好多人大吃一惊，他...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/Spring/01.Spring%E5%85%A5%E9%97%A8/01.%E7%AE%80%E4%BB%8B.html"}],["meta",{"property":"og:site_name","content":"真理并无尽头"}],["meta",{"property":"og:title","content":"简介"}],["meta",{"property":"og:description","content":"狂神说Java： 历史 2002年，首次推出Spring框架的雏形：interface21框架。; 2004年3月24日，Spring框架以interface21框架为基础，经过重新设计，发布了1.0正式版本。; Rod Johnson; Spring Framework创始人，著名作者。 很难想象Rod Johnson的学历，真的让好多人大吃一惊，他..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-17T15:53:45.000Z"}],["meta",{"property":"article:published_time","content":"2022-03-29T20:28:33.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-17T15:53:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"简介\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-29T20:28:33.000Z\\",\\"dateModified\\":\\"2023-02-17T15:53:45.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"历史","slug":"历史","link":"#历史","children":[]},{"level":2,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1676649225000,"updatedTime":1676649225000,"contributors":[{"name":"HeJin","email":"deciphers@163.com","commits":1}]},"readingTime":{"minutes":1.51,"words":453},"filePathRelative":"Spring/01.Spring入门/01.简介.md","localizedDate":"2022年3月29日","autoDesc":true}');export{e as data};
