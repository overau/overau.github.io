import{_ as a,V as e,W as r,X as i}from"./framework-a569e214.js";const t="/img/elasticsearch/image-20210318195835664.png",c="/img/elasticsearch/image-20210318195847931.png",s="/img/elasticsearch/image-20210318200112571.png",n="/img/elasticsearch/image-20210318200210195.png",o={},g=i('<h2 id="elasticsearch简介" tabindex="-1"><a class="header-anchor" href="#elasticsearch简介" aria-hidden="true">#</a> ElasticSearch简介</h2><p>Elasticsearch是一个基于Lucene的搜索服务器。它提供了一个<strong>分布式</strong>多用户能力的<strong>全文搜索引擎</strong>，基于<strong>RESTful</strong> web接口。Elasticsearch是用<strong>Java语言</strong>开发的，并作为Apache许可条款下的开放源码发布，是一种流行的企业级搜索引擎。Elasticsearch用于云计算中，能够达到<strong>实时搜索</strong>，稳定，可靠，快速，安装使用方便。官方客户端在Java、.NET（C#）、PHP、Python、Apache Groovy、Ruby和许多其他语言中都是可用的。根据DB-Engines的排名显示，Elasticsearch是<strong>最受欢迎的企业搜索引擎</strong>，其次是Apache Solr，也是基于Lucene。</p><p><strong>Elasticsearch</strong>是与名为<strong>Logstash</strong>的数据收集和日志解析引擎以及名为<strong>Kibana</strong>的分析和可视化平台一起开发的。这三个产品被设计成一个集成解决方案，称为“Elastic Stack”（以前称为“ELK stack”）。</p><h2 id="solr简介" tabindex="-1"><a class="header-anchor" href="#solr简介" aria-hidden="true">#</a> Solr简介</h2><p>Solr是一个高性能，采用Java开发，基于Lucene的全文搜索服务器。同时对其进行了扩展，提供了比Lucene更为丰富的查询语言，同时实现了可配置、可扩展并对查询性能进行了优化，并且提供了一个完善的功能管理界面，是一款非常优秀的全文搜索引擎。</p><p>文档通过Http利用XML 加到一个搜索集合中。查询该集合也是通过http收到一个XML/JSON响应来实现。它的主要特性包括：高效、灵活的缓存功能，垂直搜索功能，高亮显示搜索结果，通过索引复制来提高可用性，提供一套强大Data Schema来定义字段，类型和设置文本分析，提供基于Web的管理界面等。</p><h2 id="lucene简介" tabindex="-1"><a class="header-anchor" href="#lucene简介" aria-hidden="true">#</a> Lucene简介</h2><p>Lucene是apache软件基金会4 jakarta项目组的一个子项目，是一个开放源代码的全文检索引擎工具包，但它不是一个完整的全文检索引擎，而是一个全文检索引擎的架构，提供了完整的查询引擎和索引引擎，部分文本分析引擎（英文与德文两种西方语言）。Lucene的目的是为软件开发人员提供一个简单易用的工具包，以方便的在目标系统中实现全文检索的功能，或者是以此为基础建立起完整的全文检索引擎。</p><p>Lucene最初是由Doug Cutting开发的，在SourceForge的网站上提供下载。在2001年9月作为高质量的开源Java产品加入到Apache软件基金会的 Jakarta家族中。随着每个版本的发布，这个项目得到明显的增强，也吸引了更多的用户和开发人员。</p><h2 id="比较" tabindex="-1"><a class="header-anchor" href="#比较" aria-hidden="true">#</a> 比较</h2><figure><img src="'+t+'" alt="image-20210318195835664" tabindex="0" loading="lazy"><figcaption>image-20210318195835664</figcaption></figure><figure><img src="'+c+'" alt="image-20210318195847931" tabindex="0" loading="lazy"><figcaption>image-20210318195847931</figcaption></figure><figure><img src="'+s+'" alt="image-20210318200112571" tabindex="0" loading="lazy"><figcaption>image-20210318200112571</figcaption></figure><figure><img src="'+n+'" alt="image-20210318200210195" tabindex="0" loading="lazy"><figcaption>image-20210318200210195</figcaption></figure><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>1、es基本是开箱即用，非常简单。Solr安装略微复杂一丢丢。</p><p>2、Solr利用 Zookeeper进行分布式管理，而 Elasticsearch自身带有分布式协调管理功能。</p><p>3、Solr支持更多格式的数据，比如JSON、XML、CSV，而 Elasticsearch仅支持json文件格式。</p><p>4、Solr官方提供的功能更多，而Elasticsearch本身更注重于核心功能。高级功能多由第三方插件提供，例如图形化界面需要 kibana友好支撑。</p><p>5、Solr查询快，但更新索引时慢(即插入删除慢)，用于电商等查询多的应用。ES建立索引快(即查询慢)，即实时性查询快，用于 facebook新浪等搜索。Solr是传统搜索应用的有力解决方案，但Elasticsearch更适用于新兴的实时搜索应用。</p><p>6、Solr比较成熟，有一个更大、更成熟的用户、开发和贡献者社区。而 Elasticsearch相对开发维护者较少，更新太快，学习使用 成本较高。</p>',21),h=[g];function l(p,d){return e(),r("div",null,h)}const _=a(o,[["render",l],["__file","03.Solr和ES的对比及选型.html.vue"]]);export{_ as default};
