const t=JSON.parse('{"key":"v-75e93fda","path":"/functional/01.Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/04.Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9C%81%E7%95%A5%E8%A7%84%E5%88%99.html","title":"Lambda表达式省略规则","lang":"zh-CN","frontmatter":{"title":"Lambda表达式省略规则","date":"2022-03-22T13:27:19.000Z","category":["函数式编程","Lambda表达式"],"tags":[null],"description":"参数类型可以省略; 方法体只有一句代码时：大括号、return、和唯一一句代码的分号可以省略; 方法只有一个参数时小括号可以省略; 可推导可省略; 上面的练习，还可以这样写：","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/functional/01.Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/04.Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9C%81%E7%95%A5%E8%A7%84%E5%88%99.html"}],["meta",{"property":"og:site_name","content":"真理并无尽头"}],["meta",{"property":"og:title","content":"Lambda表达式省略规则"}],["meta",{"property":"og:description","content":"参数类型可以省略; 方法体只有一句代码时：大括号、return、和唯一一句代码的分号可以省略; 方法只有一个参数时小括号可以省略; 可推导可省略; 上面的练习，还可以这样写："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-17T16:41:17.000Z"}],["meta",{"property":"article:published_time","content":"2022-03-22T13:27:19.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-17T16:41:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Lambda表达式省略规则\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-22T13:27:19.000Z\\",\\"dateModified\\":\\"2023-02-17T16:41:17.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1676652077000,"updatedTime":1676652077000,"contributors":[{"name":"HeJin","email":"deciphers@163.com","commits":1}]},"readingTime":{"minutes":0.42,"words":125},"filePathRelative":"functional/01.Lambda表达式/04.Lambda表达式省略规则.md","localizedDate":"2022年3月22日","autoDesc":true}');export{t as data};
