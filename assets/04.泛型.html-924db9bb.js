const e=JSON.parse('{"key":"v-7cfb9d42","path":"/JavaSE/05.%E9%9B%86%E5%90%88/04.%E6%B3%9B%E5%9E%8B.html","title":"泛型","lang":"zh-CN","frontmatter":{"title":"泛型","date":"2022-12-02T16:29:50.000Z","category":["Java","集合"],"description":"概述 泛型可以把类型明确的工作推迟到创建对象或者调用方法的时候才去明确的特殊的类型。相当于把数据类型作为参数来进行传递。; 泛型只能是引用数据类型。; 使用 既然Object是所有类的父类，为什么不把成员变量设置成Object，这样就可以存储任何类型的值了？ 使用Object是可以的，但是当我们获取到需要的成员变量之后，需要手动进行类型转换，才能调用对...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/JavaSE/05.%E9%9B%86%E5%90%88/04.%E6%B3%9B%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"真理并无尽头"}],["meta",{"property":"og:title","content":"泛型"}],["meta",{"property":"og:description","content":"概述 泛型可以把类型明确的工作推迟到创建对象或者调用方法的时候才去明确的特殊的类型。相当于把数据类型作为参数来进行传递。; 泛型只能是引用数据类型。; 使用 既然Object是所有类的父类，为什么不把成员变量设置成Object，这样就可以存储任何类型的值了？ 使用Object是可以的，但是当我们获取到需要的成员变量之后，需要手动进行类型转换，才能调用对..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-17T16:41:17.000Z"}],["meta",{"property":"article:published_time","content":"2022-12-02T16:29:50.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-17T16:41:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"泛型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-12-02T16:29:50.000Z\\",\\"dateModified\\":\\"2023-02-17T16:41:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"泛型类 & 泛型接口","slug":"泛型类-泛型接口","link":"#泛型类-泛型接口","children":[]},{"level":3,"title":"泛型方法","slug":"泛型方法","link":"#泛型方法","children":[]}]},{"level":2,"title":"泛型上限 & 泛型下限","slug":"泛型上限-泛型下限","link":"#泛型上限-泛型下限","children":[]}],"git":{"createdTime":1676652077000,"updatedTime":1676652077000,"contributors":[{"name":"HeJin","email":"deciphers@163.com","commits":1}]},"readingTime":{"minutes":2.51,"words":752},"filePathRelative":"JavaSE/05.集合/04.泛型.md","localizedDate":"2022年12月2日","autoDesc":true}');export{e as data};
