import{_ as a,V as n,W as s,X as e}from"./framework-a569e214.js";const t={},c=e(`<h2 id="静态-vs-动态语言" tabindex="-1"><a class="header-anchor" href="#静态-vs-动态语言" aria-hidden="true">#</a> 静态 vs 动态语言</h2><blockquote><p>动态语言是一类在运行时可以改变其结构的语言：比如新的函数、对象、甚至代码可以被引进，已有的函数可以被删除或是其他结构上的变化。通俗点说就是在运行时代码可以根据某些条件改变自身结构。主要动态语言：Object-C、C#、JavaScript、PHP、Python等。</p></blockquote><p>例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token string">&quot;var a=3; var b=5;alert(a+b)&quot;</span>
    <span class="token function">eval</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>与动态语言相对的，运行时结构不可变得语言就是静态语言。如Java、C、C++。</p></blockquote><p>Java不是动态语言，但Java可以称之为“准动态语言”。即Java有一定的动态性，我们可以利用反射机制获得类似动态语言的特性。Java的动态性让编程的时候更加灵活。</p><h2 id="java-reflection" tabindex="-1"><a class="header-anchor" href="#java-reflection" aria-hidden="true">#</a> Java reflection</h2><blockquote><p>JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Class</span> c <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.String&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>加载完类之后，在堆内存的方法区中就产生了一个Class类型的对象（一个类只有一个class对象），这个对象就包含了完整的结构信息。我们可以通过这个对象看到类的结构。这个对象就像一面镜子，透过这个镜子看到类的结构。所以，我们形象地称之为“反射”。</p><h3 id="正常方式" tabindex="-1"><a class="header-anchor" href="#正常方式" aria-hidden="true">#</a> 正常方式</h3><p>引入需要的包类名称 ---&gt; 通过new实例化 ---&gt; 取得实例化对象</p><h3 id="反射方式" tabindex="-1"><a class="header-anchor" href="#反射方式" aria-hidden="true">#</a> 反射方式</h3><p>实例化对象 ---&gt; getClass方法 ---&gt; 得到完整的包类名称</p>`,14),o=[c];function p(i,l){return n(),s("div",null,o)}const d=a(t,[["render",p],["__file","05.反射概述.html.vue"]]);export{d as default};
