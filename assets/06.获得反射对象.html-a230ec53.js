const e=JSON.parse('{"key":"v-4c837d14","path":"/JavaSE/07.%E6%B3%A8%E8%A7%A3%E5%92%8C%E5%8F%8D%E5%B0%84/06.%E8%8E%B7%E5%BE%97%E5%8F%8D%E5%B0%84%E5%AF%B9%E8%B1%A1.html","title":"获得反射对象","lang":"zh-CN","frontmatter":{"title":"获得反射对象","date":"2022-03-29T16:03:09.000Z","category":["Java","注解和反射"],"description":"Java反射机制研究及应用 在运行时判断任意一个对象所属的类；; 在运行时构造任意一个类的对象；; 在运行时判断任意一个类所具有的成员变量和方法（通过反射甚至可以调用private方法）；; 在运行时调用任意一个对象的方法; 工厂模式：Factory类中用反射的话，添加了一个新的类之后，就不需要再修改工厂类Factory了; 数据库JDBC中通过Cla...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/JavaSE/07.%E6%B3%A8%E8%A7%A3%E5%92%8C%E5%8F%8D%E5%B0%84/06.%E8%8E%B7%E5%BE%97%E5%8F%8D%E5%B0%84%E5%AF%B9%E8%B1%A1.html"}],["meta",{"property":"og:site_name","content":"真理并无尽头"}],["meta",{"property":"og:title","content":"获得反射对象"}],["meta",{"property":"og:description","content":"Java反射机制研究及应用 在运行时判断任意一个对象所属的类；; 在运行时构造任意一个类的对象；; 在运行时判断任意一个类所具有的成员变量和方法（通过反射甚至可以调用private方法）；; 在运行时调用任意一个对象的方法; 工厂模式：Factory类中用反射的话，添加了一个新的类之后，就不需要再修改工厂类Factory了; 数据库JDBC中通过Cla..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-17T16:41:17.000Z"}],["meta",{"property":"article:published_time","content":"2022-03-29T16:03:09.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-17T16:41:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"获得反射对象\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-29T16:03:09.000Z\\",\\"dateModified\\":\\"2023-02-17T16:41:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Java反射机制研究及应用","slug":"java反射机制研究及应用","link":"#java反射机制研究及应用","children":[]},{"level":2,"title":"Java反射优点和缺点","slug":"java反射优点和缺点","link":"#java反射优点和缺点","children":[]},{"level":2,"title":"反射相关的主要API","slug":"反射相关的主要api","link":"#反射相关的主要api","children":[]},{"level":2,"title":"测试","slug":"测试","link":"#测试","children":[]},{"level":2,"title":"Class对象创建方式","slug":"class对象创建方式","link":"#class对象创建方式","children":[]}],"git":{"createdTime":1676652077000,"updatedTime":1676652077000,"contributors":[{"name":"HeJin","email":"deciphers@163.com","commits":1}]},"readingTime":{"minutes":1.98,"words":594},"filePathRelative":"JavaSE/07.注解和反射/06.获得反射对象.md","localizedDate":"2022年3月29日","autoDesc":true}');export{e as data};
