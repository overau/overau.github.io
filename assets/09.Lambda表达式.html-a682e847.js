const e=JSON.parse('{"key":"v-1ff12104","path":"/JavaSE/10.%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AF%A6%E8%A7%A3/09.Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F.html","title":"Lambda表达式","lang":"zh-CN","frontmatter":{"title":"Lambda表达式","date":"2022-03-29T15:30:54.000Z","category":["Java","多线程详解"],"description":"为什么要使用Lambda表达式 避免匿名内部类定义过多。; 可以让代码看起来很简洁。; 去掉了一堆没有意义的代码，只留下核心的逻辑。; 其实质属于函数式编程的概念。 函数式接口的定义：任何接口，如果只包含唯一一个抽象方法，那么就是一个函数式接口。比如Runnable接口： 对于函数式接口，我们可以通过lambda表达式来创建该接口的对象。 lambda...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/JavaSE/10.%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AF%A6%E8%A7%A3/09.Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"真理并无尽头"}],["meta",{"property":"og:title","content":"Lambda表达式"}],["meta",{"property":"og:description","content":"为什么要使用Lambda表达式 避免匿名内部类定义过多。; 可以让代码看起来很简洁。; 去掉了一堆没有意义的代码，只留下核心的逻辑。; 其实质属于函数式编程的概念。 函数式接口的定义：任何接口，如果只包含唯一一个抽象方法，那么就是一个函数式接口。比如Runnable接口： 对于函数式接口，我们可以通过lambda表达式来创建该接口的对象。 lambda..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-17T15:53:45.000Z"}],["meta",{"property":"article:published_time","content":"2022-03-29T15:30:54.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-17T15:53:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Lambda表达式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-29T15:30:54.000Z\\",\\"dateModified\\":\\"2023-02-17T15:53:45.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1676649225000,"updatedTime":1676649225000,"contributors":[{"name":"HeJin","email":"deciphers@163.com","commits":1}]},"readingTime":{"minutes":1.91,"words":572},"filePathRelative":"JavaSE/10.多线程详解/09.Lambda表达式.md","localizedDate":"2022年3月29日","autoDesc":true}');export{e as data};
