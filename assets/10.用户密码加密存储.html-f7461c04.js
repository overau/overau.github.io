import{_ as n}from"./way-of-thinking-analysis-ad554127.js";import{_ as s,V as a,W as e,X as t}from"./framework-a569e214.js";const p="/img/springsecurity/mysql-verification-develop-06.png",o="/img/springsecurity/mysql-verification-develop-07.png",c={},i=t('<figure><img src="'+n+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="springsecurity配置类配置passwordencoder" tabindex="-1"><a class="header-anchor" href="#springsecurity配置类配置passwordencoder" aria-hidden="true">#</a> SpringSecurity配置类配置PasswordEncoder</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">PasswordEncoder</span> <span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试passwordencoder" tabindex="-1"><a class="header-anchor" href="#测试passwordencoder" aria-hidden="true">#</a> 测试PasswordEncoder</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Autowired</span>
<span class="token keyword">private</span> <span class="token class-name">PasswordEncoder</span> passwordEncoder<span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 加密</span>
    <span class="token class-name">String</span> encode <span class="token operator">=</span> passwordEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">&quot;123456789&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> encode2 <span class="token operator">=</span> passwordEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">&quot;123456789&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>encode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>encode2<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 密码校验</span>
    <span class="token keyword">boolean</span> matches <span class="token operator">=</span> passwordEncoder<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token string">&quot;123456789&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;$2a$10$YzMd4CELnRUDNOs9HQJdR.KA2X5YnC5aOHQ4zCzjRVvGv5oOppEJW&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> matches1 <span class="token operator">=</span> passwordEncoder<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token string">&quot;123456789&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123456789&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>matches1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>$<span class="token number">2</span>a$<span class="token number">10</span>$xEnP5Omtl9JEk8xUm4Qp7ONjKxcmwMjcgp<span class="token operator">/</span><span class="token class-name">FAdo</span><span class="token operator">/</span><span class="token class-name">KYj5IbZmF6agm</span>
$<span class="token number">2</span>a$<span class="token number">10</span>$rr62fnSnQEURKuCVIO9KbuV8g3fQnbIQ6CJMwNxFLIQ2emec8slV2
<span class="token number">2022</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">05.856</span>  <span class="token constant">WARN</span> <span class="token number">4316</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>s<span class="token punctuation">.</span>c<span class="token punctuation">.</span>bcrypt<span class="token punctuation">.</span></span>BCryptPasswordEncoder</span>     <span class="token operator">:</span> <span class="token class-name">Encoded</span> password does not look like <span class="token class-name">BCrypt</span>
<span class="token boolean">true</span>
<span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="再次测试登录" tabindex="-1"><a class="header-anchor" href="#再次测试登录" aria-hidden="true">#</a> 再次测试登录</h2><figure><img src="`+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此时报错信息是<code>用户名或者密码错误</code>。我们自己也在<code>UserDetailsServiceImpl</code>抛出了一个异常<code>用户名或者密码错误</code>，这里是用户查询不到的时候抛出的。但是输入的用户名<code>admin</code>在数据库中是存在的，所以这个异常是<mark>SpringSecurity内部自己的异常</mark>（可以把异常信息改之后再测试，发现的确是这样），是<code>PasswordEncoder</code>比对密码的时候跑出的。</p><blockquote><p>此时我们已经配置了<code>PasswordEncoder</code>，但是数据库中还是存储之前的明文密码。<code>PasswordEncoder</code>在调用<code>matches方法</code>进行校验的时候，密码对不上，所以报错。</p></blockquote><p>修改数据库中的密码为加密之后的：</p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>再次访问登录页面，登录成功。</p>',14),l=[i];function u(r,d){return a(),e("div",null,l)}const v=s(c,[["render",u],["__file","10.用户密码加密存储.html.vue"]]);export{v as default};
