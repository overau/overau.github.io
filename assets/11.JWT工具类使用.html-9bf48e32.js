import{_ as n,V as s,W as a,X as t}from"./framework-a569e214.js";const e={},p=t(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> jwt <span class="token operator">=</span> <span class="token function">createJWT</span><span class="token punctuation">(</span><span class="token string">&quot;101&quot;</span><span class="token punctuation">,</span> <span class="token constant">JWT_TTL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;jwt = &quot;</span> <span class="token operator">+</span> jwt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Claims</span> claims <span class="token operator">=</span> <span class="token function">parseJWT</span><span class="token punctuation">(</span>jwt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;userId = &quot;</span> <span class="token operator">+</span> claims<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>jwt <span class="token operator">=</span> eyJhbGciOiJIUzI1NiJ9<span class="token punctuation">.</span>eyJqdGkiOiJmMzE1Mjk2ZmNiOTg0YWQxODI5NGMzMGUwMmYzMDQ1YSIsInN1YiI6IjEwMSIsImlzcyI6InNnIiwiaWF0IjoxNjQ4Mzc1NTA1LCJleHAiOjE2NDg0NjE5MDV9<span class="token punctuation">.</span>gEg09ke5e5MBthozw9yyfWRYgVkLcFBhOoalgmlJcok
userId <span class="token operator">=</span> <span class="token number">101</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),c=[p];function o(l,i){return s(),a("div",null,c)}const k=n(e,[["render",o],["__file","11.JWT工具类使用.html.vue"]]);export{k as default};
