import{_ as e,V as p,W as t,Y as n,Z as s,$ as o,X as c,F as l}from"./framework-a569e214.js";const i={},u=n("h3",{id:"概念",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#概念","aria-hidden":"true"},"#"),s(" 概念")],-1),r={href:"https://mybatis.org/mybatis-3/zh/sqlmap-xml.html#cache",target:"_blank",rel:"noopener noreferrer"},k=c(`<p>二级缓存也叫全局缓存，一级缓存作用域太低了，所有诞生了二级缓存。</p><p>基于namespace级别的缓存。一个名称空间，对应一个二级缓存。</p><p>工作机制：</p><ul><li>一个会话查询一条数据，这个数据就会被放在当前会话的一级缓存中。</li><li>如果当前会话关闭了，这个会话对应的<mark>一级缓存就没了</mark>。但是我们想要的是，<mark>会话关闭了，一级缓存中的数据被保存到二级缓存中</mark>。</li><li>新的会话查询信息，就可以从二级缓存中获取。</li><li>不同的mapper查出的数据会放在自己对应的缓存（map）中。</li></ul><h3 id="核心配置文件显示开启缓存" tabindex="-1"><a class="header-anchor" href="#核心配置文件显示开启缓存" aria-hidden="true">#</a> 核心配置文件显示开启缓存</h3><table><thead><tr><th style="text-align:left;">设置名</th><th style="text-align:left;">描述</th><th style="text-align:left;">有效值</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;">cacheEnabled</td><td style="text-align:left;">全局性地开启或关闭所有映射器配置文件中已配置的任何缓存。</td><td style="text-align:left;">true | false</td><td style="text-align:left;">true</td></tr></tbody></table><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--显示开启全局缓存--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cacheEnabled<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在要使用二级缓存的mapper文件开启缓存" tabindex="-1"><a class="header-anchor" href="#在要使用二级缓存的mapper文件开启缓存" aria-hidden="true">#</a> 在要使用二级缓存的mapper文件开启缓存</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--在当前mapper使用二级缓存--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>自定义</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--在当前mapper使用二级缓存--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span> <span class="token attr-name">eviction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FIFO<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">flushInterval</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>60000<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>512<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">readOnly</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 二级缓存测试
 */</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test03</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> <span class="token class-name">MybatisUtils</span><span class="token punctuation">.</span><span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">UserMapper</span> userMapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">getUserById8</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
    sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
         * 一级缓存失效
         */</span>

    <span class="token class-name">SqlSession</span> sqlSession2 <span class="token operator">=</span> <span class="token class-name">MybatisUtils</span><span class="token punctuation">.</span><span class="token function">getSqlSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">UserMapper</span> userMapper2 <span class="token operator">=</span> sqlSession2<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">User</span> user2 <span class="token operator">=</span> userMapper2<span class="token punctuation">.</span><span class="token function">getUserById8</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user2<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user <span class="token operator">==</span> user2<span class="token punctuation">)</span><span class="token punctuation">;</span>

    sqlSession2<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="mapper未开启二级缓存" tabindex="-1"><a class="header-anchor" href="#mapper未开启二级缓存" aria-hidden="true">#</a> mapper未开启二级缓存</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Opening</span> <span class="token constant">JDBC</span> <span class="token class-name">Connection</span>
<span class="token class-name">Created</span> connection <span class="token number">1233705144.</span>
<span class="token operator">==</span><span class="token operator">&gt;</span>  <span class="token class-name">Preparing</span><span class="token operator">:</span> select <span class="token operator">*</span> from user where id <span class="token operator">=</span> <span class="token operator">?</span> 
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span>    <span class="token class-name">Columns</span><span class="token operator">:</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> pwd
<span class="token operator">&lt;=</span><span class="token operator">=</span>        <span class="token class-name">Row</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> 狂神<span class="token punctuation">,</span> <span class="token number">123456</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span>      <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token class-name">User</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">=</span>狂神<span class="token punctuation">,</span> pwd<span class="token operator">=</span><span class="token number">123456</span><span class="token punctuation">)</span>
<span class="token class-name">Closing</span> <span class="token constant">JDBC</span> <span class="token class-name">Connection</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>ConnectionImpl</span><span class="token annotation punctuation">@4988d8b8</span><span class="token punctuation">]</span>
<span class="token class-name">Returned</span> connection <span class="token number">1233705144</span> <span class="token keyword">to</span> <span class="token namespace">pool<span class="token punctuation">.</span></span>
<span class="token class-name">Opening</span> <span class="token constant">JDBC</span> <span class="token class-name">Connection</span>
<span class="token class-name">Checked</span> out connection <span class="token number">1233705144</span> from pool<span class="token punctuation">.</span>
<span class="token operator">==</span><span class="token operator">&gt;</span>  <span class="token class-name">Preparing</span><span class="token operator">:</span> select <span class="token operator">*</span> from user where id <span class="token operator">=</span> <span class="token operator">?</span> 
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span>    <span class="token class-name">Columns</span><span class="token operator">:</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> pwd
<span class="token operator">&lt;=</span><span class="token operator">=</span>        <span class="token class-name">Row</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> 狂神<span class="token punctuation">,</span> <span class="token number">123456</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span>      <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token class-name">User</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">=</span>狂神<span class="token punctuation">,</span> pwd<span class="token operator">=</span><span class="token number">123456</span><span class="token punctuation">)</span>
<span class="token boolean">false</span>
<span class="token class-name">Closing</span> <span class="token constant">JDBC</span> <span class="token class-name">Connection</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>ConnectionImpl</span><span class="token annotation punctuation">@4988d8b8</span><span class="token punctuation">]</span>
<span class="token class-name">Returned</span> connection <span class="token number">1233705144</span> <span class="token keyword">to</span> <span class="token namespace">pool<span class="token punctuation">.</span></span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以发现，查询了2次数据库。</p><h4 id="mapper文件开启二级缓存" tabindex="-1"><a class="header-anchor" href="#mapper文件开启二级缓存" aria-hidden="true">#</a> mapper文件开启二级缓存</h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--在当前mapper使用二级缓存--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span> <span class="token attr-name">eviction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FIFO<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">flushInterval</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>60000<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>512<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">readOnly</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Cache</span> <span class="token class-name">Hit</span> <span class="token class-name">Ratio</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>kuang<span class="token punctuation">.</span>dao<span class="token punctuation">.</span></span>UserMapper</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">0.0</span>
<span class="token class-name">Opening</span> <span class="token constant">JDBC</span> <span class="token class-name">Connection</span>
<span class="token class-name">Created</span> connection <span class="token number">1911152052.</span>
<span class="token operator">==</span><span class="token operator">&gt;</span>  <span class="token class-name">Preparing</span><span class="token operator">:</span> select <span class="token operator">*</span> from user where id <span class="token operator">=</span> <span class="token operator">?</span> 
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span>    <span class="token class-name">Columns</span><span class="token operator">:</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> pwd
<span class="token operator">&lt;=</span><span class="token operator">=</span>        <span class="token class-name">Row</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> 狂神<span class="token punctuation">,</span> <span class="token number">123456</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span>      <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token class-name">User</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">=</span>狂神<span class="token punctuation">,</span> pwd<span class="token operator">=</span><span class="token number">123456</span><span class="token punctuation">)</span>
<span class="token class-name">Closing</span> <span class="token constant">JDBC</span> <span class="token class-name">Connection</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>ConnectionImpl</span><span class="token annotation punctuation">@71e9ddb4</span><span class="token punctuation">]</span>
<span class="token class-name">Returned</span> connection <span class="token number">1911152052</span> <span class="token keyword">to</span> <span class="token namespace">pool<span class="token punctuation">.</span></span>
<span class="token class-name">Cache</span> <span class="token class-name">Hit</span> <span class="token class-name">Ratio</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>kuang<span class="token punctuation">.</span>dao<span class="token punctuation">.</span></span>UserMapper</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">0.5</span>
<span class="token class-name">User</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">=</span>狂神<span class="token punctuation">,</span> pwd<span class="token operator">=</span><span class="token number">123456</span><span class="token punctuation">)</span>
<span class="token boolean">true</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从结果发现，只查了一次数据库。第二次查的是二级缓存。</p><h3 id="实体类序列化的问题" tabindex="-1"><a class="header-anchor" href="#实体类序列化的问题" aria-hidden="true">#</a> 实体类序列化的问题</h3><h4 id="mapper文件不配置二级缓存参数" tabindex="-1"><a class="header-anchor" href="#mapper文件不配置二级缓存参数" aria-hidden="true">#</a> mapper文件不配置二级缓存参数</h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--开启二级缓存--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>会报错：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>cache<span class="token punctuation">.</span></span>CacheException</span><span class="token operator">:</span> <span class="token class-name">Error</span> serializing <span class="token class-name"><span class="token namespace">object<span class="token punctuation">.</span></span>  Cause</span><span class="token operator">:</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>NotSerializableException</span><span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>kuang<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span>User</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="序列化实体类" tabindex="-1"><a class="header-anchor" href="#序列化实体类" aria-hidden="true">#</a> 序列化实体类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>kuang<span class="token punctuation">.</span>pojo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">AllArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Serializable</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * @Description TODO
 * @Author Administrator
 * @Date 2020/12/1 11:27
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> pwd<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样设置之后，测试结果正常。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Cache</span> <span class="token class-name">Hit</span> <span class="token class-name">Ratio</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>kuang<span class="token punctuation">.</span>dao<span class="token punctuation">.</span></span>UserMapper</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">0.0</span>
<span class="token class-name">Opening</span> <span class="token constant">JDBC</span> <span class="token class-name">Connection</span>
<span class="token class-name">Created</span> connection <span class="token number">1708169732.</span>
<span class="token operator">==</span><span class="token operator">&gt;</span>  <span class="token class-name">Preparing</span><span class="token operator">:</span> select <span class="token operator">*</span> from user where id <span class="token operator">=</span> <span class="token operator">?</span> 
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span>    <span class="token class-name">Columns</span><span class="token operator">:</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> pwd
<span class="token operator">&lt;=</span><span class="token operator">=</span>        <span class="token class-name">Row</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> 狂神<span class="token punctuation">,</span> <span class="token number">123456</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span>      <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token class-name">User</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">=</span>狂神<span class="token punctuation">,</span> pwd<span class="token operator">=</span><span class="token number">123456</span><span class="token punctuation">)</span>
<span class="token class-name">Closing</span> <span class="token constant">JDBC</span> <span class="token class-name">Connection</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>ConnectionImpl</span><span class="token annotation punctuation">@65d09a04</span><span class="token punctuation">]</span>
<span class="token class-name">Returned</span> connection <span class="token number">1708169732</span> <span class="token keyword">to</span> <span class="token namespace">pool<span class="token punctuation">.</span></span>
<span class="token class-name">Cache</span> <span class="token class-name">Hit</span> <span class="token class-name">Ratio</span> <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>kuang<span class="token punctuation">.</span>dao<span class="token punctuation">.</span></span>UserMapper</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">0.5</span>
<span class="token class-name">User</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">=</span>狂神<span class="token punctuation">,</span> pwd<span class="token operator">=</span><span class="token number">123456</span><span class="token punctuation">)</span>
<span class="token boolean">false</span>
user的hashcode <span class="token operator">=</span> <span class="token number">1506349811</span>
user2的hashcode <span class="token operator">=</span> <span class="token number">1506349811</span>

<span class="token class-name">Process</span> finished <span class="token keyword">with</span> <span class="token namespace">exit</span> code <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为实体类实现了序列化接口。<mark>序列化是深拷贝，所以反序列化后的队象和原对象不是同一个对象，故hash值不同</mark>。</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><ul><li>只要开启了二级缓存，在同一个Mapper下就有效！</li><li>所有的数据都会先放在一级缓存中。</li><li>只有当会话提交或者关闭的时候，才会提交到二级缓存中。</li></ul>`,33);function d(m,v){const a=l("ExternalLinkIcon");return p(),t("div",null,[u,n("p",null,[n("a",r,[s("https://mybatis.org/mybatis-3/zh/sqlmap-xml.html#cache"),o(a)])]),k])}const g=e(i,[["render",d],["__file","26.二级缓存.html.vue"]]);export{g as default};
