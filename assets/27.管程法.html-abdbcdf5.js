const e=JSON.parse('{"key":"v-79622f30","path":"/JavaSE/10.%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AF%A6%E8%A7%A3/27.%E7%AE%A1%E7%A8%8B%E6%B3%95.html","title":"管程法","lang":"zh-CN","frontmatter":{"title":"管程法","date":"2022-03-29T15:41:26.000Z","category":["Java","多线程详解"],"description":"并发协作模型生产者/消费者模式 管程法 生产者：负责生产数据的模块(可能是方法、对象、线程、进程)。; 消费者：负责处理数据的模块(可能是方法、对象、线程、进程)。; 缓冲区：消费者不能直接使用生产者的数据，他们之间有个缓冲区。; ==生产者将生产好的数据放入缓冲区，消费者从缓冲区拿出数据。== 管程法：生产者、消费者、产品、缓冲区","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/JavaSE/10.%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AF%A6%E8%A7%A3/27.%E7%AE%A1%E7%A8%8B%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"真理并无尽头"}],["meta",{"property":"og:title","content":"管程法"}],["meta",{"property":"og:description","content":"并发协作模型生产者/消费者模式 管程法 生产者：负责生产数据的模块(可能是方法、对象、线程、进程)。; 消费者：负责处理数据的模块(可能是方法、对象、线程、进程)。; 缓冲区：消费者不能直接使用生产者的数据，他们之间有个缓冲区。; ==生产者将生产好的数据放入缓冲区，消费者从缓冲区拿出数据。== 管程法：生产者、消费者、产品、缓冲区"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-15T05:11:43.000Z"}],["meta",{"property":"article:published_time","content":"2022-03-29T15:41:26.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-15T05:11:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"管程法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-29T15:41:26.000Z\\",\\"dateModified\\":\\"2023-03-15T05:11:43.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1678857103000,"updatedTime":1678857103000,"contributors":[{"name":"HeJin","email":"deciphers@163.com","commits":1}]},"readingTime":{"minutes":1.81,"words":544},"filePathRelative":"JavaSE/10.多线程详解/27.管程法.md","localizedDate":"2022年3月29日","autoDesc":true}');export{e as data};
