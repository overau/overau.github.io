import{_ as e,V as i,W as a,X as n}from"./framework-a569e214.js";const s="/img/redis/image-20201231174043996.png",d="/img/redis/image-20201231180148775.png",l="/img/redis/image-20201231175352733.png",r="/img/redis/image-20201231175610732.png",t="/img/redis/image-20201231175147904.png",o="/img/redis/image-20201231175305126.png",c="/img/redis/image-20201231180646641.png",p="/img/redis/image-20201231180736158.png",g={},u=n('<h2 id="主从复制概念" tabindex="-1"><a class="header-anchor" href="#主从复制概念" aria-hidden="true">#</a> 主从复制概念</h2><blockquote><p>主从复制，是指将一台 Redis服务器的数据，复制到其他的 Redis服务器。前者称为主节点( master/leader),后者称为从节点(slave/follower)。<code>数据的复制是单向的，只能由主节点到从节点</code>。 Master以写为主, Slave以读为主。</p></blockquote><p><code>默认情况下，毎台 Redis服务器都是主节点</code>。且一个主节点可以有多个从节点(或没有从节点)，但一个从节点只能有一个主节点。</p><h2 id="主从复制的作用" tabindex="-1"><a class="header-anchor" href="#主从复制的作用" aria-hidden="true">#</a> 主从复制的作用</h2><ul><li>数据冗余：主从复制实现了数据的热备份，是持久化之外的一种数据冗余方式。</li><li>故障恢复：当主节点岀现问题时，可以由从节点提供服务，实现快速的故障恢复。实际上是一种服务的冗余。</li><li>负载均衡：在主从复制的基础上，配合读写分离，可以由主节点提供写服务，由从节点提供读服务(即写 Redis数据时应用连接 主节点,读 Redis数据时应用连接从节点)，分担服务器负载。尤其是在写少读多的场景下，通过多个从节点分担读负载，可以大 大提高Reds服务器的并发量。</li><li>高可用基石除了上述作用以外，主从复制还是哨兵和集群能够实施的基础，因此说主从复制是 Redis高可用的基础。</li></ul><p>一般来说，要将 Redis运用于工程项目中，<code>只使用一台 Redis是万万不能的</code>。原因如下：</p><ul><li>从结构上，单个 Redis服务器会发生单点故障，并且一台服务器需要处理所有的请求负载，压力较大。</li><li>从容量上，单个Reds服务器内存容量有限。就算一台Reds服务器内存容量为256G，也不能将所有内存用作Reds存内存。</li></ul><p>一般来说，<code>单台 Redis最大使用内存不应该超过20G</code>。电商网站上的商品，一般都是一次上传,无数次浏览的，说专业点也就是<code>多读少写</code>。对于这种场景,我们可以使如下这种架构：</p><figure><img src="'+s+`" alt="image-20201231174043996" tabindex="0" loading="lazy"><figcaption>image-20201231174043996</figcaption></figure><blockquote><p>主从复制，读写分离。80%的情况下都是在进行读操作。减缓服务器的压力。架构中经常使用。一主二从。只要在公司中，主从复制就是必须要使用的。因为在真实的项目中不可能单机使用Redis。</p></blockquote><h2 id="环境配置" tabindex="-1"><a class="header-anchor" href="#环境配置" aria-hidden="true">#</a> 环境配置</h2><p>只配置从库，不用配置主库。</p><blockquote><p>查看当前配置的信息</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> info replication
<span class="token comment"># Replication</span>
role:master				<span class="token comment"># 角色</span>
connected_slaves:0		<span class="token comment"># 没有从机</span>
master_replid:788af815d532c2f0d6942c2405d3c054e4c521b7
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:0
second_repl_offset:-1
repl_backlog_active:0
repl_backlog_size:1048576
repl_backlog_first_byte_offset:0
repl_backlog_histlen:0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>单机Redis配置一主二从伪集群</p></blockquote><p>复制3个配置文件，修改对应的信息。</p><figure><img src="`+d+`" alt="image-20201231180148775" tabindex="0" loading="lazy"><figcaption>image-20201231180148775</figcaption></figure><h4 id="端口修改" tabindex="-1"><a class="header-anchor" href="#端口修改" aria-hidden="true">#</a> 端口修改</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>port <span class="token number">6379</span>
port <span class="token number">6380</span>
port <span class="token number">6381</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+l+`" alt="image-20201231175352733" tabindex="0" loading="lazy"><figcaption>image-20201231175352733</figcaption></figure><h4 id="pid-file修改" tabindex="-1"><a class="header-anchor" href="#pid-file修改" aria-hidden="true">#</a> pid-file修改</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pidfile <span class="token string">&quot;/var/run/redis_6379.pid&quot;</span>
pidfile <span class="token string">&quot;/var/run/redis_6380.pid&quot;</span>
pidfile <span class="token string">&quot;/var/run/redis_6381.pid&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+r+`" alt="image-20201231175610732" tabindex="0" loading="lazy"><figcaption>image-20201231175610732</figcaption></figure><h4 id="日志文件修改" tabindex="-1"><a class="header-anchor" href="#日志文件修改" aria-hidden="true">#</a> 日志文件修改</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>logfile <span class="token string">&quot;6379.log&quot;</span>
logfile <span class="token string">&quot;6380.log&quot;</span>
logfile <span class="token string">&quot;6381.log&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+t+`" alt="image-20201231175147904" tabindex="0" loading="lazy"><figcaption>image-20201231175147904</figcaption></figure><h4 id="rdb文件修改" tabindex="-1"><a class="header-anchor" href="#rdb文件修改" aria-hidden="true">#</a> RDB文件修改</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>dbfilename <span class="token string">&quot;dump-6379.rdb&quot;</span>
dbfilename <span class="token string">&quot;dump-6380.rdb&quot;</span>
dbfilename <span class="token string">&quot;dump-6381.rdb&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+o+`" alt="image-20201231175305126" tabindex="0" loading="lazy"><figcaption>image-20201231175305126</figcaption></figure><h4 id="修改完毕后启动3个服务" tabindex="-1"><a class="header-anchor" href="#修改完毕后启动3个服务" aria-hidden="true">#</a> 修改完毕后启动3个服务</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@iz2ze88y8n1wfg7e488dbkz bin<span class="token punctuation">]</span><span class="token comment">#redis-server hconfig/redis-79.conf </span>
<span class="token punctuation">[</span>root@iz2ze88y8n1wfg7e488dbkz bin<span class="token punctuation">]</span><span class="token comment">#redis-server hconfig/redis-80.conf</span>
<span class="token punctuation">[</span>root@iz2ze88y8n1wfg7e488dbkz bin<span class="token punctuation">]</span><span class="token comment">#redis-server hconfig/redis-81.conf</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>出现3个日志文件</p><figure><img src="`+c+'" alt="image-20201231180646641" tabindex="0" loading="lazy"><figcaption>image-20201231180646641</figcaption></figure><p>查看进程信息</p><figure><img src="'+p+'" alt="image-20201231180736158" tabindex="0" loading="lazy"><figcaption>image-20201231180736158</figcaption></figure>',35),m=[u];function b(v,h){return i(),a("div",null,m)}const _=e(g,[["render",b],["__file","29.Redis集群环境搭建.html.vue"]]);export{_ as default};
